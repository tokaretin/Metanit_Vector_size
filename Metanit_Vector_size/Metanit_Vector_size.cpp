#include <iostream>
#include <vector>

int main()
{
    std::vector<int> vec{ 2,3,4 };
    
    //vec.clear(); // делает муктор пустым
    vec.pop_back(); // удалил третий элемент (4)
    vec.push_back(12); // добавил в конец всех элементов (12)

    if (vec.empty())
    {
        std::cout << "Vector empty";
    }
    else
    {
        for (int i = 0; i < vec.size(); i++)
        {
            std::cout << vec[i];
            if (i != vec.size() - 1) std::cout << ", ";
        }
    }


    /*С помощью функции resize() можно изменить размер вектора. Эта функция имеет две формы:
    * resize(n): оставляет в векторе n первых элементов. Если вектор содержит больше элементов, 
    то его размер усекается до n элементов. Если размер вектора меньше n, то добавляются недостающие 
    элементы и инициализируются значением по умолчанию resize(n, value): также 
    оставляет в векторе n первых элементов. Если размер вектора меньше n, то добавляются недостающие элементы со значением value*/
    
    // Применение функции:
    std::vector<int> numbers1{ 1, 2, 3, 4, 5, 6 };
    numbers1.resize(4); // оставляем первые четыре элемента - numbers1 = {1, 2, 3, 4}

    numbers1.resize(6, 8);   // numbers1 = {1, 2, 3, 4, 8, 8}
    /*Важно учитывать, что применение функции resize может сделать некорректными все итераторы, указатели и ссылки на элементы.*/

}
